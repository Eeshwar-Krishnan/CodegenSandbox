{
    "drive_motor_imports": "import com.revrobotics.spark.SparkFlex;\nimport com.revrobotics.spark.SparkBase.ControlType;\nimport com.revrobotics.spark.SparkBase.PersistMode;\nimport com.revrobotics.spark.SparkBase.ResetMode;\nimport com.revrobotics.spark.SparkLowLevel.MotorType;\nimport com.revrobotics.spark.config.ClosedLoopConfig.FeedbackSensor;\nimport com.revrobotics.spark.config.SparkBaseConfig.IdleMode;\nimport com.revrobotics.spark.config.SparkFlexConfig;",
    "drive_motor_variables": "    SparkFlex driveMotor;",
    "drive_motor_initialize": "        driveMotor = new SparkFlex(constants.driveMotorCanID, MotorType.kBrushless);\n\n        SparkFlexConfig driveConfig = new SparkFlexConfig();\n        driveConfig.idleMode(IdleMode.kBrake);\n        driveConfig.smartCurrentLimit((int)Constants.SwerveConstants.driveCurrentLimit);\n\n        driveConfig.encoder.positionConversionFactor((1.0 / Constants.SwerveConstants.driveRatio) * Constants.SwerveConstants.wheelCircumference);\n        driveConfig.encoder.velocityConversionFactor((1.0 / Constants.SwerveConstants.driveRatio) * Constants.SwerveConstants.wheelCircumference);\n\n        driveConfig.closedLoop.feedbackSensor(FeedbackSensor.kPrimaryEncoder);\n        driveConfig.closedLoop.pid(Constants.SwerveConstants.drivekP, 0, Constants.SwerveConstants.drivekD);\n        driveConfig.closedLoop.velocityFF(Constants.SwerveConstants.drivekV);\n        driveConfig.closedLoop.outputRange(-1.0, 1.0);\n\n        driveMotor.configure(driveConfig, ResetMode.kResetSafeParameters, PersistMode.kPersistParameters);",
    "drive_motor_setspeed": "        if(useOpenLoop){\n            driveMotor.set(state.speedMetersPerSecond / Constants.SwerveConstants.maxChassisSpeed);\n        }else {\n            driveMotor.getClosedLoopController().setReference(state.speedMetersPerSecond, ControlType.kVelocity);\n        }",
    "drive_motor_getwheelposition": "        return driveMotor.getEncoder().getPosition();",
    "drive_motor_getwheelvelocity": "        return driveMotor.getEncoder().getVelocity();"
}